name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Release, Debug]
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake clang-tidy cppcheck libseccomp-dev libcap-dev
      - name: Configure
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DBUILD_TESTS=ON -DENABLE_SECCOMP=ON -DENABLE_CAPABILITIES=ON
      - name: Static analysis (clang-tidy)
        run: cmake --build build --target sys_scan_core -- -j$(nproc) && clang-tidy --version || true
      - name: cppcheck
        run: cppcheck --enable=warning,performance,portability --inline-suppr --quiet src || true
      - name: Build
        run: cmake --build build --config ${{matrix.build_type}} -j$(nproc)
      - name: Run tests
        run: cd build && ctest --output-on-failure

  sanitize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: sudo apt-get update && sudo apt-get install -y clang cmake libseccomp-dev libcap-dev
      - name: Configure (ASan/UBSan)
        run: CC=clang CXX=clang++ cmake -B build -S . -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_TESTS=ON -DCMAKE_CXX_FLAGS="-fsanitize=address,undefined -fno-omit-frame-pointer" -DENABLE_SECCOMP=ON -DENABLE_CAPABILITIES=ON
      - name: Build
        run: cmake --build build -j$(nproc)
      - name: Tests (sanitizers)
        run: cd build && ASAN_OPTIONS=detect_leaks=1 ctest --output-on-failure

  fuzz-smoke:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install clang
        run: sudo apt-get update && sudo apt-get install -y clang cmake
      - name: Configure fuzz harness
        run: CC=clang CXX=clang++ cmake -B build -S . -DBUILD_FUZZERS=ON -DBUILD_TESTS=OFF -DCMAKE_CXX_FLAGS="-O1 -fsanitize=fuzzer,address,undefined"
      - name: Build fuzz target
        run: cmake --build build -j$(nproc) --target fuzz_rules || true
      - name: Run fuzz smoke (30s)
        run: |
          if [ -f build/fuzz_rules ]; then
            ./build/fuzz_rules -max_total_time=30 || true
          fi
